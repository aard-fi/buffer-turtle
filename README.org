* buffer turtles                                                      :TOC_4:
  - [[#introduction][Introduction]]

** Introduction

Ever since I've played with ChatGPT for the first time I've been wondering how it'd behave if it had the ability to control simple [[https://en.wikipedia.org/wiki/Turtle_graphics][Turtle graphics]] in ASCII mode. While hooking various Emacs functionality up to [[https://github.com/karthink/gptel][gptel tools]] I realised that I now have an environment where it'd be able to draw just that.

This is a quick and dirty implementation of a turtle capable of going in four directions in any buffer - destroying the buffer contents as it goes. It can be run in two modes:

- Timer. It executes the current instruction roughly once per second. I initially had decent success in that mode - there's a [[https://www.youtube.com/watch?v=3HQMoVXbET4][youtube video of my second test run]]. In new, clean sessions using that mode was a bit trickier: It seems it only works well after a good initial explanation of the turtle mechanics in the current context.
- Manual. The turtle can be called for each supported direction, and will draw exactly one step. I've implemented that mode after GPT tried to use the tool like that.

#+CAPTION: A demo run of the turtle in manual mode
[[./demo.png]]

gptel bindings are provided for both modes - but you'd only want to have one set loaded to avoid confusion.

For easier starting bindings for reading and clearing the turtle buffer are included as well - if you already have generic buffer bindings you may want to omit those.
